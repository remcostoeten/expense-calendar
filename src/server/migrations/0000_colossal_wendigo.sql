CREATE TABLE "user_profiles" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "user_profiles_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"user_id" text NOT NULL,
	"display_name" text,
	"bio" text,
	"avatar_url" text,
	"location" text,
	"website" text,
	"oauth_providers" jsonb,
	"preferences" jsonb DEFAULT '{}'::jsonb,
	"created_at" timestamp with time zone DEFAULT now() NOT NULL,
	"updated_at" timestamp with time zone DEFAULT now() NOT NULL,
	CONSTRAINT "user_profiles_user_id_unique" UNIQUE("user_id")
);
--> statement-breakpoint
CREATE TABLE "user_settings" (
	"user_id" integer NOT NULL,
	"show_current_time" boolean DEFAULT true,
	"show_recurring_events" boolean DEFAULT true,
	"default_view" varchar(20) DEFAULT 'week',
	"created_at" timestamp DEFAULT now() NOT NULL,
	"updated_at" timestamp DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "users" (
	"id" serial PRIMARY KEY NOT NULL,
	"email" text NOT NULL,
	"name" text NOT NULL,
	"created_at" timestamp DEFAULT now() NOT NULL,
	"updated_at" timestamp DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "calendar_integrations" (
	"calendar_id" integer NOT NULL,
	"provider" text NOT NULL,
	"external_id" text NOT NULL,
	"created_at" timestamp DEFAULT now() NOT NULL,
	"updated_at" timestamp DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "event_integrations" (
	"event_id" integer NOT NULL,
	"provider" text NOT NULL,
	"external_id" text NOT NULL,
	"created_at" timestamp DEFAULT now() NOT NULL,
	"updated_at" timestamp DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "user_integrations" (
	"user_id" integer NOT NULL,
	"provider" text NOT NULL,
	"access_token" text,
	"refresh_token" text,
	"app_password" text,
	"expires_at" timestamp,
	"created_at" timestamp DEFAULT now() NOT NULL,
	"updated_at" timestamp DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "commute_declarations" (
	"id" serial PRIMARY KEY NOT NULL,
	"user_id" text NOT NULL,
	"date" timestamp with time zone NOT NULL,
	"work_location" text NOT NULL,
	"distance_km" numeric(6, 2),
	"commute_method" text NOT NULL,
	"km_allowance_amount" numeric(6, 2),
	"home_office_allowance_amount" numeric(6, 2),
	"total_allowance" numeric(6, 2) NOT NULL,
	"notes" text,
	"created_at" timestamp DEFAULT now() NOT NULL,
	"updated_at" timestamp DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "commute_profiles" (
	"id" serial PRIMARY KEY NOT NULL,
	"user_id" text NOT NULL,
	"commute_method" text NOT NULL,
	"km_allowance" numeric(4, 2) DEFAULT '0.23',
	"public_transport_cost" numeric(6, 2),
	"home_office_allowance" numeric(4, 2) DEFAULT '2.00',
	"home_address" text NOT NULL,
	"home_postal_code" varchar(10) NOT NULL,
	"home_city" text NOT NULL,
	"home_street" text NOT NULL,
	"office_address" text NOT NULL,
	"office_postal_code" varchar(10) NOT NULL,
	"office_city" text NOT NULL,
	"office_street" text NOT NULL,
	"distance_km" numeric(6, 2),
	"has_fixed_office_days" boolean DEFAULT false,
	"fixed_office_days" jsonb,
	"has_home_office_allowance" boolean DEFAULT false,
	"home_office_days" jsonb,
	"onboarding_completed" boolean DEFAULT false,
	"created_at" timestamp DEFAULT now() NOT NULL,
	"updated_at" timestamp DEFAULT now() NOT NULL,
	CONSTRAINT "commute_profiles_user_id_unique" UNIQUE("user_id")
);
--> statement-breakpoint
CREATE TABLE "commute_trips" (
	"id" serial PRIMARY KEY NOT NULL,
	"user_id" text NOT NULL,
	"template_id" integer,
	"trip_date" timestamp with time zone NOT NULL,
	"departure_time" timestamp with time zone,
	"arrival_time" timestamp with time zone,
	"from_address" text NOT NULL,
	"from_latitude" numeric(10, 8),
	"from_longitude" numeric(11, 8),
	"to_address" text NOT NULL,
	"to_latitude" numeric(10, 8),
	"to_longitude" numeric(11, 8),
	"commute_method" text NOT NULL,
	"distance_km" numeric(6, 2),
	"actual_duration_minutes" integer,
	"km_allowance" numeric(4, 2) DEFAULT '0.23',
	"public_transport_cost" numeric(6, 2),
	"home_office_allowance" numeric(4, 2),
	"total_allowance" numeric(6, 2) NOT NULL,
	"status" text DEFAULT 'completed',
	"is_from_home" boolean DEFAULT true,
	"calendar_event_id" integer,
	"notes" text,
	"created_at" timestamp DEFAULT now() NOT NULL,
	"updated_at" timestamp DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "trip_templates" (
	"id" serial PRIMARY KEY NOT NULL,
	"user_id" text NOT NULL,
	"name" text NOT NULL,
	"description" text,
	"from_address" text NOT NULL,
	"from_latitude" numeric(10, 8),
	"from_longitude" numeric(11, 8),
	"to_address" text NOT NULL,
	"to_latitude" numeric(10, 8),
	"to_longitude" numeric(11, 8),
	"commute_method" text NOT NULL,
	"distance_km" numeric(6, 2),
	"estimated_duration_minutes" integer,
	"km_allowance" numeric(4, 2) DEFAULT '0.23',
	"public_transport_cost" numeric(6, 2),
	"home_office_allowance" numeric(4, 2),
	"is_recurring" boolean DEFAULT false,
	"recurrence_pattern" text,
	"recurrence_days" jsonb,
	"recurrence_start_date" timestamp with time zone,
	"recurrence_end_date" timestamp with time zone,
	"add_to_calendar" boolean DEFAULT false,
	"calendar_id" integer,
	"event_title" text,
	"event_description" text,
	"is_active" boolean DEFAULT true,
	"created_at" timestamp DEFAULT now() NOT NULL,
	"updated_at" timestamp DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "calendars" (
	"id" serial PRIMARY KEY NOT NULL,
	"name" varchar(255) NOT NULL,
	"description" text,
	"color" char(7) DEFAULT '#3b82f6' NOT NULL,
	"user_id" integer NOT NULL,
	"is_default" boolean DEFAULT false,
	"sort_order" integer DEFAULT 0,
	"created_at" timestamp DEFAULT now() NOT NULL,
	"updated_at" timestamp DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "default_calendar_templates" (
	"id" serial PRIMARY KEY NOT NULL,
	"name" varchar(255) NOT NULL,
	"description" text,
	"color" char(7) DEFAULT '#3b82f6' NOT NULL,
	"is_default" boolean DEFAULT false,
	"sort_order" integer DEFAULT 0,
	"created_at" timestamp DEFAULT now() NOT NULL,
	"updated_at" timestamp DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "event_reminders" (
	"id" serial PRIMARY KEY NOT NULL,
	"event_id" integer NOT NULL,
	"minutes_before" integer NOT NULL,
	"created_at" timestamp DEFAULT now() NOT NULL,
	"updated_at" timestamp DEFAULT now() NOT NULL
);
--> statement-breakpoint
CREATE TABLE "events" (
	"id" serial PRIMARY KEY NOT NULL,
	"title" varchar(255) NOT NULL,
	"description" text,
	"start_time" timestamp NOT NULL,
	"end_time" timestamp NOT NULL,
	"all_day" boolean DEFAULT false,
	"location" varchar(255),
	"calendar_id" integer NOT NULL,
	"user_id" integer NOT NULL,
	"recurrence_rule" text,
	"created_at" timestamp DEFAULT now() NOT NULL,
	"updated_at" timestamp DEFAULT now() NOT NULL,
	CONSTRAINT "end_time_after_start_time" CHECK ("events"."end_time" > "events"."start_time")
);
--> statement-breakpoint
ALTER TABLE "commute_trips" ADD CONSTRAINT "commute_trips_template_id_trip_templates_id_fk" FOREIGN KEY ("template_id") REFERENCES "public"."trip_templates"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
CREATE UNIQUE INDEX "users_email_unique" ON "users" USING btree ("email");--> statement-breakpoint
CREATE INDEX "calendar_integrations_calendar_provider_idx" ON "calendar_integrations" USING btree ("calendar_id","provider");--> statement-breakpoint
CREATE INDEX "calendar_integrations_provider_external_idx" ON "calendar_integrations" USING btree ("provider","external_id");--> statement-breakpoint
CREATE INDEX "event_integrations_event_provider_idx" ON "event_integrations" USING btree ("event_id","provider");--> statement-breakpoint
CREATE INDEX "event_integrations_provider_external_idx" ON "event_integrations" USING btree ("provider","external_id");--> statement-breakpoint
CREATE INDEX "user_integrations_user_provider_idx" ON "user_integrations" USING btree ("user_id","provider");--> statement-breakpoint
CREATE INDEX "commute_trips_user_idx" ON "commute_trips" USING btree ("user_id");--> statement-breakpoint
CREATE INDEX "commute_trips_date_idx" ON "commute_trips" USING btree ("trip_date");--> statement-breakpoint
CREATE INDEX "commute_trips_template_idx" ON "commute_trips" USING btree ("template_id");--> statement-breakpoint
CREATE INDEX "commute_trips_status_idx" ON "commute_trips" USING btree ("status");--> statement-breakpoint
CREATE INDEX "trip_templates_user_idx" ON "trip_templates" USING btree ("user_id");--> statement-breakpoint
CREATE INDEX "trip_templates_active_idx" ON "trip_templates" USING btree ("is_active");--> statement-breakpoint
CREATE INDEX "calendars_user_idx" ON "calendars" USING btree ("user_id");--> statement-breakpoint
CREATE INDEX "calendars_sort_idx" ON "calendars" USING btree ("sort_order");--> statement-breakpoint
CREATE INDEX "default_calendar_templates_sort_idx" ON "default_calendar_templates" USING btree ("sort_order");--> statement-breakpoint
CREATE INDEX "event_reminders_event_idx" ON "event_reminders" USING btree ("event_id");--> statement-breakpoint
CREATE INDEX "events_calendar_idx" ON "events" USING btree ("calendar_id");--> statement-breakpoint
CREATE INDEX "events_user_idx" ON "events" USING btree ("user_id");--> statement-breakpoint
CREATE INDEX "events_time_idx" ON "events" USING btree ("start_time","end_time");